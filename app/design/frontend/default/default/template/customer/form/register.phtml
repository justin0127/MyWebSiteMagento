<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Create account form template
 *
 * @see Mage_Customer_Block_Form_Register
 */
?>
<script>
function panbie(){
	var type=  document.getElementById('regtype').value;
}

function yanzhen(){
if(document.getElementById('readif').checked="checked"){
return true;
}else{
return false;
}
}
</script>
<div class="account-create">
<?php 
	 //print_r ($_GET);
	 ?>
<?php if(($this->getType()  == 'offline')) { ?>	
    
    <div class="page-title1">
        <h1 class="xisili"><?php echo $this->__('希思黎会员网上激活') ?></h1>
    </div>
	<?php }elseif($_GET['regist_type'] == 'offline/'){ ?>
	<div class="page-title1">
        <h1 class="xisili"><?php echo $this->__('希思黎会员网上激活') ?></h1>
        </div>
	<?php }else{ ?>
	<div class="page-title1">
	        <h1 class="xisili"><?php echo $this->__('非希思黎会员注册') ?></h1>
	</div>
	<?php } ?>
    <?php echo $this->getChildHtml('form_fields_before')?>
    <?php echo $this->getMessagesBlock()->getGroupedHtml() ?>
    <!--<form action="<?php //echo $this->getPostActionUrl() ?>" method="post" id="form-validate" class="regeistForm" onsubmit="yanzhengma();return false;">-->
    <form action="<?php echo $this->getPostActionUrl() ?>" method="post" id="form-validate" class="regeistForm">
        <div class="fieldset">
            <input type="hidden" name="success_url" value="<?php echo $this->getSuccessUrl() ?>" />
            <input type="hidden" name="error_url" value="<?php echo $this->getErrorUrl() ?>" />
            <!--<h2 class="legend"><?php echo $this->__('Personal Information') ?></h2>-->
            <ul class="form-list">
			<!-- add regist type -->
	<?php /*if($this->getType()  == 'offline') { ?>		 
	<li>
	<label for="vipnumber" class="required"><em>*</em><?php echo $this->__('会员卡号') ?></label>
	<div class="input-box">
	<input type="text" name="vipnumber" id="vip_number" value="<?php echo $this->htmlEscape($this->getFormData()->getVipNumber()) ?>" title="<?php echo $this->__('会员卡号') ?>" class="input-text required-entry" />
	</div> 
	</li>
	<?php } */?>
	<!-- end add regist type -->	
		 <?php if(($this->getType()  == 'offline')||($_GET['regist_type']=='offline/')) { ?>	
				<script>
						<!--   start   hiding
						function   verifyMobileNumber() 
						{
						var   num   =   document.getElementById('mobile_phone').value;
						　　   var   pattern   =   /^\d{1,11}$/;
						　　   flag   =   pattern.test(num);
						　　   if(flag)
						　　   {
						　		document.getElementById('mobile_phone').style.border   =  "1px solid #B6B6B6";
						　　   }
						　　   else
						　　   {
							document.getElementById('mobile_phone').style.border   =   "2px solid red";
								alert("请输入正确格式的手机号！");
								document.getElementById('mobile_phone').value='';
								
						　　　   //alert( "请输入1-6位整数! ");
						　　   }
						}
						
							function verTelNumberLength(){
						var   num   =   document.getElementById('mobile_phone').value.length;
							if(num < 11){
							document.getElementById('mobile_phone').style.border   =   "2px solid red";
								alert("请输入11位手机号！");
								document.getElementById('mobile_phone').value='';
							}
						}
						
						
						//   stop   hiding   -->
						</script> 
			
			
			
			<li>			 
		<label for="mobile" class="required"><?php echo $this->__('手机号') ?></label>
		<div class="input-box">
		<input type="text" onChange= "verifyMobileNumber(); verTelNumberLength()" name="mobile" maxlength="11" id="mobile_phone" value="<?php echo $this->htmlEscape($this->getFormData()->getMobile()) ?>" title="<?php echo $this->__('手机号') ?>" class="input-text " /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px; width:225px;">此内容保密，不会被其他人看见</span>
		</div>
		</li>
		
		
	 <li class="fields fieldsName">
			<?php echo $this->getLayout()->createBlock('customer/widget_name')->setObject($this->getFormData())->toHtml() ?>
			
		</li>
		<li class="fields ">			
			<!-- Need Js to SubString Xingming -->
			<label for="fullname" class="required"><em>*</em><?php echo $this->__('姓名') ?></label>
			<div class="input-box">
			<input type="text" name="fullname" id="fullname" value="" title="" class="input-text required-entry" />
			</div>
			
		</li>   
    
				<li>
                    <label for="email_address" class="required"><em>*</em><?php echo $this->__('Email Address') ?></label><span style="color:#a5a5a5; float:left; font-size:11px; padding-left:10px;">(example@sisley.com.cn)</span>
                    <div class="input-box">
                        <input type="text" name="email" id="email_address" value="<?php echo $this->htmlEscape($this->getFormData()->getEmail()) ?>" title="<?php echo $this->__('Email Address') ?>" class="input-text validate-email required-entry" /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px;">请填写有效的Emai地址作为下次登录的用户名</span>
                    </div>
					
				 </li>
	
	
					   <li class="fields">
                    <div class="field">
                        <label for="password" class="required"><em>*</em><?php echo $this->__('Password') ?></label>
						
                        <div class="input-box">
                            <input type="password" name="password" id="password" maxlength="16" title="<?php echo $this->__('Password') ?>" class="input-text required-entry validate-password" /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px; width:225px;">密码请设为6-16位字母或数字</span>
                        </div>
                    </div>
               
			   <script>
			   
			   function comparePwd(){
							if (document.getElementById('password').value !="" && document.getElementById('confirmation').value!=""){
								if(document.getElementById('password').value!=document.getElementById('confirmation').value){
									alert("您前后输入的密码不一致，请重新输入。");
									document.getElementById('confirmation').value="";
									}
								}									
						}

			   
			   </script>
			   
				  </li>
				  
				    <li class="fields">
				    <div class="field">
                        <label for="confirmation" class="required"><em>*</em><?php echo $this->__('请重新输入密码确认') ?></label>
                        <div class="input-box">
                            <input type="password" name="confirmation" maxlength="16" title="<?php echo $this->__('Confirm Password') ?>" id="confirmation" class="input-text required-entry validate-cpassword" onchange="comparePwd()" />
                        </div>
                    </div>
				  
				  </li>
				  
				  
				  
				  
				 <li>
				<label for="alias" class="required"><em></em><?php echo $this->__('昵称') ?></label>
				<div class="input-box">
				<input type="text" name="alias" id="alias" value="<?php echo $this->htmlEscape($this->getFormData()->getAlias()) ?>" title="<?php echo $this->__('昵称') ?>"  maxlength="20" class="input-text " /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px; width:225px;">请输入中英文、数字、下划线或它们的组合</span>
				</div>
				</li>
 
 <?php }else{ ?>
	
	     	<li>
                    <label for="email_address" class="required"><em>*</em><?php echo $this->__('Email Address') ?></label><span style="color:#a5a5a5; float:left; font-size:11px; padding-left:10px;">(example@sisley.com.cn)</span>
                    <div class="input-box">
                        <input type="text" name="email" id="email_address" value="<?php echo $this->htmlEscape($this->getFormData()->getEmail()) ?>" title="<?php echo $this->__('Email Address') ?>" class="input-text validate-email required-entry" /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px;">请填写有效的Emai地址作为下次登录的用户名</span>
                    </div>
					
				 </li>
				 
				   <li class="fields">
                    <div class="field">
                        <label for="password" class="required"><em>*</em><?php echo $this->__('Password') ?></label>
						
                        <div class="input-box">
                            <input type="password" name="password" id="password" maxlength="16" title="<?php echo $this->__('Password') ?>" class="input-text required-entry validate-password" /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px; width:225px;">密码请设为6-16位字母或数字</span>
                        </div>
                    </div>
               
				  </li>
				     <li class="fields fieldsName">
						<?php //echo $this->getLayout()->createBlock('customer/widget_name')->setObject($this->getFormData())->toHtml() ?>
                    </li>
					
					 
			   <script>
			   
			   function comparePwd(){
							if (document.getElementById('password').value !="" && document.getElementById('confirmation').value!=""){
								if(document.getElementById('password').value!=document.getElementById('confirmation').value){
									alert("您前后输入的密码不一致，请重新输入。");
									document.getElementById('confirmation').value="";
									}
								}									
						}

			   
			   </script>
					
				  	  <li class="fields">
				    <div class="field">
                        <label for="confirmation" class="required"><em>*</em><?php echo $this->__('请重新输入密码确认') ?></label>
                        <div class="input-box">
                            <input type="password" name="confirmation" maxlength="16" title="<?php echo $this->__('Confirm Password') ?>" id="confirmation" class="input-text required-entry validate-cpassword" onchange="comparePwd()"/>
                        </div>
                    </div>
				  
				  </li>
				    
				 <li>
				<label for="alias" class="required"><em></em><?php echo $this->__('昵称') ?></label>
				<div class="input-box">
				<input type="text" name="alias" id="alias2" value="<?php echo $this->htmlEscape($this->getFormData()->getAlias()) ?>" title="<?php echo $this->__('昵称') ?>" maxlength="20" class="input-text " /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px; width:225px;">请输入中英文、数字、下划线或它们的组合</span>
				</div>
				</li>
				  
				  	<script>
						<!--   start   hiding
						function   verifyTMNumber()
						{
						var   num   =   document.getElementById('mobile').value;
						　　   var   pattern   =   /^\d{1,11}$/;
						　　   flag   =   pattern.test(num);
						　　   if(flag)
						　　   {
						　		document.getElementById('mobile').style.border   =  "1px solid #B6B6B6";
						　　   }
						　　   else
						　　   {
							document.getElementById('mobile').style.border   =   "2px solid red";
								alert("请输入正确格式的手机号！");
								document.getElementById('mobile').value='';
								
						　　　   //alert( "请输入1-6位整数! ");
						　　   }
						}
						
						
						function vermobileNumberLength(){
						var   num   =   document.getElementById('mobile').value.length;
							if(num < 11){
							document.getElementById('mobile').style.border   =   "2px solid red";
								alert("请输入11位手机号！");
								document.getElementById('mobile').value='';
							}
						}
						
						
						//   stop   hiding   -->
						</script> 
					
				  
				  	<li>			 
					<label for="mobile" class="required"><?php echo $this->__('手机号') ?></label>
					<div class="input-box">
					
					<input type="text" name="mobile" id="mobile" onChange= "verifyTMNumber(); vermobileNumberLength()" value="<?php echo $this->htmlEscape($this->getFormData()->getMobile()) ?>" maxlength="11" title="<?php echo $this->__('手机号') ?>" class="input-text " /><span style="color:#a5a5a5; float:right; font-size:11px; padding-left:10px; width:225px;">此内容保密，不会被其他人看见</span>
					</div>
					</li>
					   <input type="hidden" name="firstname" id="fullname" value="希思黎" title="" class="" />
					   <input type="hidden" name="lastname" id="fullname" value="会员" title="" class="" />
	
 
 <?php } ?>
			
                <!-- add regist type -->
				<?php if($_GET['regist_type']=='offline/'){ ?>
				        <li style="display:none;">
                        <input type="hidden" id="regtype"  name="regist_type" id="regist_type" value="offline"/>
				</li>
				<?php }else{ ?>
                <li style="display:none;">
                        <input type="hidden" id="regtype"  name="regist_type" id="regist_type" value="<?php echo $this->getType(); ?>"/>
				</li>
				<?php }?>
                <!-- end add regist type -->
                
                <!--  session yz  -->
				<li>
				<div class="field">
				<label for="mobile" class="required"><em>*</em><?php echo $this->__('验证码') ?></label>
              	<div class="input-box">
                <input name="verif_box" class="input-text required-entry" type="text" id="verif_box" style="padding:2px; border:1px solid #CCCCCC; width:180px; height:14px;font-family:Verdana, Arial, Helvetica, sans-serif; font-size:11px;" maxlength="4"/>
                <!--<input name="verif_md5" type="hidden" id="verif_md5" style="padding:2px; border:1px solid #CCCCCC; width:180px; height:14px;font-family:Verdana, Arial, Helvetica, sans-serif; font-size:11px;"/>-->
				
				
<script type="text/javascript">
jQuery(document).ready(function() {

	jQuery("#verify5").attr("src","/yz.php?"+Math.round(Math.random()*9999));
	jQuery("#nextverify5").click(function(){
		jQuery("#verify5").attr("src","/yz.php?"+Math.round(Math.random()*9999));
		return false;
	});
});
</script>
			<img id='verify5' width='50' height='24' style='float:left' />
		</div>
		</div>
		</li>
		<li>
		<div class="next" id="nextverify5" style="cursor:pointer;" alt="点击刷新">换一张</div>
		</li>
		<?php 
		//$_COOKIE['tntcon'];
		//md5($verif_box).'a4xn'
		?>
		<script type="text/javascript">
		function setMd() {
			    //$(verif_md5).value = hex_md5(code);
			    var code = document.getElementById('verif_box').value;
			    $('verif_md5').value = hex_md5(code) + 'a4xn';
			}
		
		
		var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */
		var b64pad  = "";  /* base-64 pad character. "=" for strict RFC compliance   */
		function hex_md5(s)    { return rstr2hex(rstr_md5(str2rstr_utf8(s))); }
		function b64_md5(s)    { return rstr2b64(rstr_md5(str2rstr_utf8(s))); }
		function any_md5(s, e) { return rstr2any(rstr_md5(str2rstr_utf8(s)), e); }
		function hex_hmac_md5(k, d)
		  { return rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }
		function b64_hmac_md5(k, d)
		  { return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }
		function any_hmac_md5(k, d, e)
		  { return rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e); }

		/*
		 * Perform a simple self-test to see if the VM is working
		 */
		function md5_vm_test()
		{
		  return hex_md5("abc").toLowerCase() == "900150983cd24fb0d6963f7d28e17f72";
		}

		/*
		 * Calculate the MD5 of a raw string
		 */
		function rstr_md5(s)
		{
		  return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
		}

		/*
		 * Calculate the HMAC-MD5, of a key and some data (raw strings)
		 */
		function rstr_hmac_md5(key, data)
		{
		  var bkey = rstr2binl(key);
		  if(bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);

		  var ipad = Array(16), opad = Array(16);
		  for(var i = 0; i < 16; i++)
		  {
		    ipad[i] = bkey[i] ^ 0x36363636;
		    opad[i] = bkey[i] ^ 0x5C5C5C5C;
		  }

		  var hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
		  return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
		}

		/*
		 * Convert a raw string to a hex string
		 */
		function rstr2hex(input)
		{
		  try { hexcase } catch(e) { hexcase=0; }
		  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
		  var output = "";
		  var x;
		  for(var i = 0; i < input.length; i++)
		  {
		    x = input.charCodeAt(i);
		    output += hex_tab.charAt((x >>> 4) & 0x0F)
			   +  hex_tab.charAt( x        & 0x0F);
		  }
		  return output;
		}

		/*
		 * Convert a raw string to a base-64 string
		 */
		function rstr2b64(input)
		{
		  try { b64pad } catch(e) { b64pad=''; }
		  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
		  var output = "";
		  var len = input.length;
		  for(var i = 0; i < len; i += 3)
		  {
		    var triplet = (input.charCodeAt(i) << 16)
				| (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)
				| (i + 2 < len ? input.charCodeAt(i+2)      : 0);
		    for(var j = 0; j < 4; j++)
		    {
		      if(i * 8 + j * 6 > input.length * 8) output += b64pad;
		      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);
		    }
		  }
		  return output;
		}

		/*
		 * Convert a raw string to an arbitrary string encoding
		 */
		function rstr2any(input, encoding)
		{
		  var divisor = encoding.length;
		  var i, j, q, x, quotient;

		  /* Convert to an array of 16-bit big-endian values, forming the dividend */
		  var dividend = Array(Math.ceil(input.length / 2));
		  for(i = 0; i < dividend.length; i++)
		  {
		    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);
		  }

		  /*
		   * Repeatedly perform a long division. The binary array forms the dividend,
		   * the length of the encoding is the divisor. Once computed, the quotient
		   * forms the dividend for the next step. All remainders are stored for later
		   * use.
		   */
		  var full_length = Math.ceil(input.length * 8 /
				                    (Math.log(encoding.length) / Math.log(2)));
		  var remainders = Array(full_length);
		  for(j = 0; j < full_length; j++)
		  {
		    quotient = Array();
		    x = 0;
		    for(i = 0; i < dividend.length; i++)
		    {
		      x = (x << 16) + dividend[i];
		      q = Math.floor(x / divisor);
		      x -= q * divisor;
		      if(quotient.length > 0 || q > 0)
			quotient[quotient.length] = q;
		    }
		    remainders[j] = x;
		    dividend = quotient;
		  }

		  /* Convert the remainders to the output string */
		  var output = "";
		  for(i = remainders.length - 1; i >= 0; i--)
		    output += encoding.charAt(remainders[i]);

		  return output;
		}

		/*
		 * Encode a string as utf-8.
		 * For efficiency, this assumes the input is valid utf-16.
		 */
		function str2rstr_utf8(input)
		{
		  var output = "";
		  var i = -1;
		  var x, y;

		  while(++i < input.length)
		  {
		    /* Decode utf-16 surrogate pairs */
		    x = input.charCodeAt(i);
		    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;
		    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)
		    {
		      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
		      i++;
		    }

		    /* Encode output as utf-8 */
		    if(x <= 0x7F)
		      output += String.fromCharCode(x);
		    else if(x <= 0x7FF)
		      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),
				                    0x80 | ( x         & 0x3F));
		    else if(x <= 0xFFFF)
		      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),
				                    0x80 | ((x >>> 6 ) & 0x3F),
				                    0x80 | ( x         & 0x3F));
		    else if(x <= 0x1FFFFF)
		      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),
				                    0x80 | ((x >>> 12) & 0x3F),
				                    0x80 | ((x >>> 6 ) & 0x3F),
				                    0x80 | ( x         & 0x3F));
		  }
		  return output;
		}

		/*
		 * Encode a string as utf-16
		 */
		function str2rstr_utf16le(input)
		{
		  var output = "";
		  for(var i = 0; i < input.length; i++)
		    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,
				                  (input.charCodeAt(i) >>> 8) & 0xFF);
		  return output;
		}

		function str2rstr_utf16be(input)
		{
		  var output = "";
		  for(var i = 0; i < input.length; i++)
		    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,
				                   input.charCodeAt(i)        & 0xFF);
		  return output;
		}

		/*
		 * Convert a raw string to an array of little-endian words
		 * Characters >255 have their high-byte silently ignored.
		 */
		function rstr2binl(input)
		{
		  var output = Array(input.length >> 2);
		  for(var i = 0; i < output.length; i++)
		    output[i] = 0;
		  for(var i = 0; i < input.length * 8; i += 8)
		    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (i%32);
		  return output;
		}

		/*
		 * Convert an array of little-endian words to a string
		 */
		function binl2rstr(input)
		{
		  var output = "";
		  for(var i = 0; i < input.length * 32; i += 8)
		    output += String.fromCharCode((input[i>>5] >>> (i % 32)) & 0xFF);
		  return output;
		}

		/*
		 * Calculate the MD5 of an array of little-endian words, and a bit length.
		 */
		function binl_md5(x, len)
		{
		  /* append padding */
		  x[len >> 5] |= 0x80 << ((len) % 32);
		  x[(((len + 64) >>> 9) << 4) + 14] = len;

		  var a =  1732584193;
		  var b = -271733879;
		  var c = -1732584194;
		  var d =  271733878;

		  for(var i = 0; i < x.length; i += 16)
		  {
		    var olda = a;
		    var oldb = b;
		    var oldc = c;
		    var oldd = d;

		    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
		    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
		    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
		    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
		    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
		    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
		    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
		    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
		    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
		    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
		    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
		    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
		    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
		    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
		    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
		    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

		    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
		    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
		    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
		    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
		    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
		    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
		    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
		    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
		    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
		    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
		    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
		    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
		    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
		    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
		    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
		    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

		    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
		    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
		    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
		    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
		    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
		    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
		    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
		    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
		    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
		    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
		    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
		    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
		    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
		    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
		    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
		    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

		    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
		    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
		    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
		    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
		    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
		    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
		    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
		    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
		    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
		    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
		    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
		    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
		    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
		    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
		    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
		    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

		    a = safe_add(a, olda);
		    b = safe_add(b, oldb);
		    c = safe_add(c, oldc);
		    d = safe_add(d, oldd);
		  }
		  return Array(a, b, c, d);
		}

		/*
		 * These functions implement the four basic operations the algorithm uses.
		 */
		function md5_cmn(q, a, b, x, s, t)
		{
		  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
		}
		function md5_ff(a, b, c, d, x, s, t)
		{
		  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
		}
		function md5_gg(a, b, c, d, x, s, t)
		{
		  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
		}
		function md5_hh(a, b, c, d, x, s, t)
		{
		  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
		}
		function md5_ii(a, b, c, d, x, s, t)
		{
		  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
		}

		/*
		 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
		 * to work around bugs in some JS interpreters.
		 */
		function safe_add(x, y)
		{
		  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
		  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		  return (msw << 16) | (lsw & 0xFFFF);
		}

		/*
		 * Bitwise rotate a 32-bit number to the left.
		 */
		function bit_rol(num, cnt)
		{
		  return (num << cnt) | (num >>> (32 - cnt));
		}
		</script>
                <!--  end yz  -->
              
                <?php if ($this->isNewsletterEnabled()): ?>
                <li class="control">
                    <div class="input-box">
                        <input type="checkbox" name="is_subscribed" title="<?php echo $this->__('Sign Up for Newsletter') ?>" value="1" id="is_subscribed" checked="checked" class="checkbox" />
                    </div>
                    <label for="is_subscribed"><?php echo $this->__('Sign Up for Newsletter') ?></label>
                </li>
                <?php endif ?>
				<li class="control">
                    <div class="input-box">
                        <input type="checkbox"  id="readif" class="checkbox" checked="checked" />
                    </div>
                    <label for="">我已阅读并接受"<span class="under"><a href="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB); ?>rules" target="_blank">条款和条件</a></span>"和"<span class="under"><a href="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB); ?>secret" target="_blank">隐私条款</a></span>"</label>
                </li>
            <?php $_dob = $this->getLayout()->createBlock('customer/widget_dob') ?>
            <?php if ($_dob->isEnabled()): ?>
                <li><?php //echo $_dob->setDate($this->getFormData()->getDob())->toHtml() ?></li>
            <?php endif ?>
            <?php $_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat') ?>
            <?php if ($_taxvat->isEnabled()): ?>
                <li><?php echo $_taxvat->setTaxvat($this->getFormData()->getTaxvat())->toHtml() ?></li>
            <?php endif ?>
            <?php $_gender = $this->getLayout()->createBlock('customer/widget_gender') ?>
            <?php if ($_gender->isEnabled()): ?>
                <li><?php echo $_gender->setGender($this->getFormData()->getGender())->toHtml() ?></li>
            <?php endif ?>
            </ul>
        </div>
    <?php if($this->getShowAddressFields()): ?>
        <div class="fieldset">
            <input type="hidden" name="create_address" value="1" />
           <h2 class="legend"><?php echo $this->__('Address Information') ?></h2>
            <ul class="form-list">
                <li class="fields">
                    <div class="field">
                        <label for="company"><?php echo $this->__('Company') ?></label>
                        <div class="input-box">
                            <input type="text" name="company" id="company" value="<?php echo $this->htmlEscape($this->getFormData()->getCompany()) ?>" title="<?php echo $this->__('Company') ?>" class="input-text" />
                        </div>
                    </div>
					<script>
						<!--   start   hiding
						function   verifyTNumber()
						{
						var   num   =   document.getElementById('telephone').value;
						　　   var   pattern   =   /^\d{1,11}$/;
						　　   flag   =   pattern.test(num);
						　　   if(flag)
						　　   {
						　		document.getElementById('telephone').style.border   =  "1px solid #B6B6B6";
						　　   }
						　　   else
						　　   {
							document.getElementById('telephone').style.border   =   "1px solid #B6B6B6";
								alert("请输入正确格式的手机号！");
								document.getElementById('telephone').value='';
								
						　　　   //alert( "请输入1-6位整数! ");
						　　   }
						}
						//   stop   hiding   -->
						</script> 
					
					
					
                    <div class="field">
                        <label for="telephone" class="required"><em>*</em><?php echo $this->__('Telephone') ?></label>
                        <div class="input-box">
                            <input type="text" name="telephone" id="telephone" value="<?php echo $this->htmlEscape($this->getFormData()->getTelephone()) ?>" title="<?php echo $this->__('Telephone') ?>" class="input-text required-entry" />
                        </div>
                    </div>
                </li>
                <li class="wide">
                    <label for="street_1" class="required"><em>*</em><?php echo $this->__('Street Address') ?></label>
                    <div class="input-box">
                        <input type="text" name="street[]" value="<?php echo $this->htmlEscape($this->getFormData()->getStreet(1)) ?>" title="<?php echo $this->__('Street Address') ?>" id="street_1" class="input-text required-entry" />
                    </div>
                </li>
            <?php for ($_i=2, $_n=$this->helper('customer/address')->getStreetLines(); $_i<=$_n; $_i++): ?>
                <li class="wide">
                    <div class="input-box">
                        <input type="text" name="street[]" value="<?php echo $this->htmlEscape($this->getFormData()->getStreet($_i)) ?>" title="<?php echo $this->__('Street Address %s', $_i) ?>" id="street_<?php echo $_i?>" class="input-text" />
                    </div>
                </li>
            <?php endfor ?>
                <li class="fields">
                    <div class="field">
                        <label for="city" class="required"><em>*</em><?php echo $this->__('City') ?></label>
                        <div class="input-box">
                            <input type="text" name="city" value="<?php echo $this->htmlEscape($this->getFormData()->getCity()) ?>" title="<?php echo $this->__('City') ?>" class="input-text required-entry" id="city" />
                        </div>
                    </div>
                    <div class="field">
                        <label for="region_id" class="required"><em>*</em><?php echo $this->__('State/Province') ?></label>
                        <div class="input-box">
                            <select id="region_id" name="region_id" title="<?php echo $this->__('State/Province') ?>" class="validate-select" style="display:none;">
                                <option value=""><?php echo $this->__('Please select region, state or province') ?></option>
                            </select>
                            <script type="text/javascript">
                            //<![CDATA[
                                $('region_id').setAttribute('defaultValue', "<?php echo $this->getFormData()->getRegionId() ?>");
                            //]]>
                            </script>
                            <input type="text" id="region" name="region" value="<?php echo $this->htmlEscape($this->getRegion()) ?>" title="<?php echo $this->__('State/Province') ?>" class="input-text" style="display:none;" />
                        </div>
                    </div>
                </li>
                <li class="fields">
                    <div class="field">
                        <label for="zip" class="required"><em>*</em><?php echo $this->__('Zip/Postal Code') ?></label>
                        <div class="input-box">
                            <input type="text" name="postcode" value="<?php echo $this->htmlEscape($this->getFormData()->getPostcode()) ?>" title="<?php echo $this->__('Zip/Postal Code') ?>" id="zip" class="input-text validate-zip-international required-entry" />
                        </div>
                    </div>
                    <div class="field">
                        <label for="country" class="required"><em>*</em><?php echo $this->__('Country') ?></label>
                        <div class="input-box">
                            <?php echo $this->getCountryHtmlSelect() ?>
                        </div>
                    </div>
                </li>
            </ul>
            <input type="hidden" name="default_billing" value="1" />
            <input type="hidden" name="default_shipping" value="1" />
        </div>
    <?php endif; ?>
       <!-- <div class="fieldset">
          <h2 class="legend"><?php echo $this->__('Login Information') ?></h2>
            <ul class="form-list">
               
            </ul>
        </div>-->
        <div class="buttons-set">
            <p class="required"><?php echo $this->__('* Required Fields') ?></p>
            <p class="back-link dsiplayN"><a href="<?php echo $this->escapeUrl($this->getBackUrl()) ?>" class="back-link"><small>&laquo; </small><?php echo $this->__('Back') ?></a></p>
            <button type="submit" title="<?php echo $this->__('Submit') ?>" class="button" id="btnsubmit" onclick="setalias2();"><span><span><?php if($this->getType()  == 'offline'){ echo $this->__('激活');}else{ echo $this->__('注册');} ?></span></span></button>
        </div>
    </form>
    <script type="text/javascript">
    //<![CDATA[
        var dataForm = new VarienForm('form-validate', true);
        <?php if($this->getShowAddressFields()): ?>
        new RegionUpdater('country', 'region', 'region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'zip');
        <?php endif; ?>
        
        jQuery('#fullname').change(function(){         
        var fullname = jQuery.trim($(this).value);
        var firstname = fullname.substring(0,1);
        var lastname = fullname.substring(1);
        jQuery('#firstname').val(firstname);
        jQuery('#lastname').val(lastname); 
        });   
        
        function setalias2(){
           if (jQuery('#alias2').val() == '')  jQuery('#alias2').val('希思黎会员');
        }
		function yanzhengma(){
		//if((hex_md5(document.getElementById('verif_box').value) + 'a4xn') == cookie){
		if(1 == 2){
		return true;
		}else{
		alert('验证码错误');
		return false;
		}
		
		}

    //]]>
	
	jQuery("#readif").change(
		function(){
		  if(jQuery("#readif").attr("checked")==false){
			jQuery("#btnsubmit").attr("disabled","disabled");
			alert("尊敬的客户:\n您只有接受希思黎官网的“条款和条件”和“隐私条款”，才能注册成为我们的注册会员");
			}else{
			jQuery("#btnsubmit").attr("disabled","");
			}
		}
	)
	
    </script>
</div>
